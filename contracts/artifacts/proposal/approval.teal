#pragma version 8
intcblock 0 1 10000 100
bytecblock 0x61677265655f636f756e746572 0x64697361677265655f636f756e746572 0x69735f6578656375746564 0x64616f5f6170705f61646472657373 0x 0x6f776e6572 0x656e645f74696d65 0x626f72726f775f616d6f756e74 0x69735f726570616964 0x65786563757465645f6174 0x151f7c75 0x73746172745f74696d65 0x616c6c6f775f6561726c795f657865637574696f6e 0x616c6c6f775f6561726c795f7265706179 0x696e7465726573745f72617465 0x7465726d 0x69735f766f746564
txna ApplicationArgs 0
pushbytes 0x273612da // "create(address,uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x30c6d58a // "opt_in()void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xe2201e79 // "vote(account,uint64)uint64"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x87227109 // "execute(uint64,uint64,uint64,uint64,address)uint64"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x5fc5d55a // "repay(uint64,address)void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x3d53ca4a // "get_aggree_counter()uint64"
==
bnz main_l7
err
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getaggreecountercaster_12
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub repaycaster_11
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub executecaster_10
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub votecaster_9
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_8
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_7
intc_1 // 1
return

// create
create_0:
proto 12 0
bytec 5 // "owner"
frame_dig -12
app_global_put
pushbytes 0x64616f5f6170705f6964 // "dao_app_id"
frame_dig -11
app_global_put
bytec_3 // "dao_app_address"
frame_dig -10
app_global_put
pushbytes 0x7469746c65 // "title"
frame_dig -9
extract 2 0
app_global_put
bytec 11 // "start_time"
frame_dig -8
app_global_put
bytec 6 // "end_time"
frame_dig -7
app_global_put
bytec 12 // "allow_early_execution"
frame_dig -6
app_global_put
bytec 13 // "allow_early_repay"
frame_dig -5
app_global_put
bytec 7 // "borrow_amount"
frame_dig -4
app_global_put
bytec 14 // "interest_rate"
frame_dig -3
app_global_put
bytec 15 // "term"
frame_dig -2
app_global_put
bytec_0 // "agree_counter"
intc_0 // 0
app_global_put
bytec_1 // "disagree_counter"
intc_0 // 0
app_global_put
bytec_2 // "is_executed"
intc_0 // 0
app_global_put
bytec 8 // "is_repaid"
intc_0 // 0
app_global_put
pushbytes 0x64616f5f746f6b656e // "dao_token"
frame_dig -1
app_global_put
retsub

// opt_in
optin_1:
proto 0 0
retsub

// vote
vote_2:
proto 2 1
intc_0 // 0
txn Sender
bytec_3 // "dao_app_address"
app_global_get
==
// unauthorized
assert
frame_dig -2
txnas Accounts
bytec 16 // "is_voted"
app_local_get
intc_1 // 1
!=
assert
global LatestTimestamp
bytec 11 // "start_time"
app_global_get
>=
assert
global LatestTimestamp
bytec 6 // "end_time"
app_global_get
<=
assert
bytec_2 // "is_executed"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
intc_0 // 0
==
bnz vote_2_l2
bytec_0 // "agree_counter"
bytec_0 // "agree_counter"
app_global_get
intc_1 // 1
+
app_global_put
b vote_2_l3
vote_2_l2:
bytec_1 // "disagree_counter"
bytec_1 // "disagree_counter"
app_global_get
intc_1 // 1
+
app_global_put
vote_2_l3:
frame_dig -2
txnas Accounts
bytec 16 // "is_voted"
intc_1 // 1
app_local_put
intc_1 // 1
frame_bury 0
retsub

// execute
execute_3:
proto 5 1
intc_0 // 0
txn Sender
bytec_3 // "dao_app_address"
app_global_get
==
// unauthorized
assert
frame_dig -3
intc_0 // 0
>
assert
bytec 7 // "borrow_amount"
app_global_get
frame_dig -2
==
assert
bytec_2 // "is_executed"
app_global_get
intc_0 // 0
==
assert
bytec 12 // "allow_early_execution"
app_global_get
intc_0 // 0
==
bnz execute_3_l2
intc_1 // 1
assert
b execute_3_l3
execute_3_l2:
global LatestTimestamp
bytec 6 // "end_time"
app_global_get
>=
assert
execute_3_l3:
frame_dig -5
frame_dig -4
frame_dig -3
callsub ispassed_6
intc_1 // 1
==
assert
bytec 5 // "owner"
app_global_get
frame_dig -1
==
assert
bytec_2 // "is_executed"
intc_1 // 1
app_global_put
bytec 9 // "executed_at"
global LatestTimestamp
app_global_put
intc_1 // 1
frame_bury 0
retsub

// repay
repay_4:
proto 2 0
txn Sender
bytec_3 // "dao_app_address"
app_global_get
==
// unauthorized
assert
bytec 5 // "owner"
app_global_get
frame_dig -1
==
assert
bytec_2 // "is_executed"
app_global_get
intc_1 // 1
==
assert
bytec 8 // "is_repaid"
app_global_get
intc_0 // 0
==
assert
frame_dig -2
bytec 7 // "borrow_amount"
app_global_get
intc_2 // 10000
bytec 14 // "interest_rate"
app_global_get
+
*
intc_2 // 10000
/
>=
// amount < repay amount
assert
bytec 13 // "allow_early_repay"
app_global_get
intc_0 // 0
==
bnz repay_4_l2
global LatestTimestamp
bytec 9 // "executed_at"
app_global_get
>=
// < executed time
assert
b repay_4_l3
repay_4_l2:
global LatestTimestamp
bytec 9 // "executed_at"
app_global_get
bytec 15 // "term"
app_global_get
pushint 30 // 30
*
pushint 24 // 24
*
pushint 3600 // 3600
*
+
>=
// Not repay time
assert
repay_4_l3:
bytec 8 // "is_repaid"
intc_1 // 1
app_global_put
retsub

// get_aggree_counter
getaggreecounter_5:
proto 0 1
intc_0 // 0
bytec_0 // "agree_counter"
app_global_get
frame_bury 0
retsub

// is_passed
ispassed_6:
proto 3 1
frame_dig -2
bytec_0 // "agree_counter"
app_global_get
intc_3 // 100
*
bytec_0 // "agree_counter"
app_global_get
bytec_1 // "disagree_counter"
app_global_get
+
/
<=
frame_dig -3
bytec_0 // "agree_counter"
app_global_get
bytec_1 // "disagree_counter"
app_global_get
+
intc_3 // 100
*
frame_dig -1
/
<=
&&
retsub

// create_caster
createcaster_7:
proto 0 0
bytec 4 // ""
intc_0 // 0
bytec 4 // ""
dup
intc_0 // 0
dupn 7
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
txna ApplicationArgs 5
btoi
frame_bury 4
txna ApplicationArgs 6
btoi
frame_bury 5
txna ApplicationArgs 7
btoi
frame_bury 6
txna ApplicationArgs 8
btoi
frame_bury 7
txna ApplicationArgs 9
btoi
frame_bury 8
txna ApplicationArgs 10
btoi
frame_bury 9
txna ApplicationArgs 11
btoi
frame_bury 10
txna ApplicationArgs 12
btoi
frame_bury 11
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
frame_dig 11
callsub create_0
retsub

// opt_in_caster
optincaster_8:
proto 0 0
callsub optin_1
retsub

// vote_caster
votecaster_9:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub vote_2
frame_bury 0
bytec 10 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// execute_caster
executecaster_10:
proto 0 0
intc_0 // 0
dupn 4
bytec 4 // ""
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
txna ApplicationArgs 3
btoi
frame_bury 3
txna ApplicationArgs 4
btoi
frame_bury 4
txna ApplicationArgs 5
frame_bury 5
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub execute_3
frame_bury 0
bytec 10 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// repay_caster
repaycaster_11:
proto 0 0
intc_0 // 0
bytec 4 // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub repay_4
retsub

// get_aggree_counter_caster
getaggreecountercaster_12:
proto 0 0
intc_0 // 0
callsub getaggreecounter_5
frame_bury 0
bytec 10 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub