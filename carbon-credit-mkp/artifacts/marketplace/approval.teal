#pragma version 8
intcblock 0 1 32 48
bytecblock 0x 0x73656c6c6572 0x151f7c75 0x61756374696f6e735f636f756e746572 0x616c6c6f775f61756374696f6e 0x61737365745f6964 0x746f74616c5f63726564697473 0x6d61785f61756374696f6e5f6e756d626572 0x6f726967696e5f7072696365
txna ApplicationArgs 0
pushbytes 0xc0b64352 // "create(address,uint64)void"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0xb3e9d44a // "bootstrap(pay,uint64,uint64,uint64,string,string)uint64"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xbab387dd // "set_allow_auction(uint64)uint64"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x8e179a60 // "set_max_auction_number(uint64)uint64"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x023897d7 // "create_auction(uint64,uint64)uint64"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x322e6c6b // "accept_auction(uint64)uint64"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0xa4f33c53 // "remove_auction(uint64)uint64"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x11061f75 // "do_buy_with_auction(pay,uint64)uint64"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x2df7324e // "do_buy_without_auction(pay)uint64"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x157cc9ef // "get_auction_record(uint64)(address,uint64,uint64,uint64)"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x21f1ddff // "withdraw(uint64)void"
==
bnz main_l12
err
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub withdrawcaster_21
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getauctionrecordcaster_20
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub dobuywithoutauctioncaster_19
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub dobuywithauctioncaster_18
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub removeauctioncaster_17
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub acceptauctioncaster_16
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createauctioncaster_15
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub setmaxauctionnumbercaster_14
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub setallowauctioncaster_13
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bootstrapcaster_12
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_11
intc_1 // 1
return

// create
create_0:
proto 2 0
bytec_1 // "seller"
frame_dig -2
app_global_put
bytec_3 // "auctions_counter"
intc_0 // 0
app_global_put
bytec 6 // "total_credits"
frame_dig -1
app_global_put
retsub

// bootstrap
bootstrap_1:
proto 6 1
intc_0 // 0
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
frame_dig -6
gtxns Receiver
global CurrentApplicationAddress
==
// payment must be to app address
assert
frame_dig -6
gtxns Amount
pushint 381000 // 381000
>=
// payment must be for >= 381000
assert
bytec 4 // "allow_auction"
frame_dig -5
app_global_put
bytec 7 // "max_auction_number"
frame_dig -4
app_global_put
bytec 8 // "origin_price"
frame_dig -3
app_global_put
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
bytec 6 // "total_credits"
app_global_get
itxn_field ConfigAssetTotal
intc_0 // 0
itxn_field ConfigAssetDecimals
pushbytes 0x6363 // "cc"
itxn_field ConfigAssetUnitName
frame_dig -2
extract 2 0
itxn_field ConfigAssetName
frame_dig -1
extract 2 0
itxn_field ConfigAssetURL
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
bytec 5 // "asset_id"
itxn CreatedAssetID
app_global_put
bytec 5 // "asset_id"
app_global_get
frame_bury 0
retsub

// set_allow_auction
setallowauction_2:
proto 1 1
intc_0 // 0
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
bytec 4 // "allow_auction"
frame_dig -1
app_global_put
frame_dig -1
frame_bury 0
retsub

// set_max_auction_number
setmaxauctionnumber_3:
proto 1 1
intc_0 // 0
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
bytec 7 // "max_auction_number"
frame_dig -1
app_global_put
frame_dig -1
frame_bury 0
retsub

// create_auction
createauction_4:
proto 2 1
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
bytec 4 // "allow_auction"
app_global_get
intc_1 // 1
==
assert
intc_0 // 0
frame_bury 1
txn Sender
frame_bury 2
frame_dig 2
len
intc_2 // 32
==
assert
frame_dig 2
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig 1
itob
concat
frame_bury 3
bytec_3 // "auctions_counter"
app_global_get
frame_bury 8
frame_dig 8
itob
box_del
pop
frame_dig 8
itob
frame_dig 3
box_put
bytec_3 // "auctions_counter"
bytec_3 // "auctions_counter"
app_global_get
intc_1 // 1
+
app_global_put
bytec_3 // "auctions_counter"
app_global_get
frame_bury 0
retsub

// accept_auction
acceptauction_5:
proto 1 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
dup
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
bytec 4 // "allow_auction"
app_global_get
intc_1 // 1
==
assert
frame_dig -1
itob
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 1
frame_dig 1
intc_3 // 48
extract_uint64
frame_bury 2
frame_dig 1
extract 0 32
frame_bury 3
frame_dig 1
intc_2 // 32
extract_uint64
frame_bury 4
frame_dig 1
pushint 40 // 40
extract_uint64
frame_bury 5
frame_dig 2
intc_0 // 0
==
assert
intc_1 // 1
frame_bury 2
frame_dig 3
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 2
itob
concat
frame_bury 1
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 1
box_put
intc_1 // 1
frame_bury 0
retsub

// remove_auction
removeauction_6:
proto 1 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
frame_dig -1
itob
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 1
frame_dig 1
intc_3 // 48
extract_uint64
frame_bury 2
frame_dig 2
intc_0 // 0
==
assert
frame_dig -1
itob
box_del
pop
frame_dig -1
frame_bury 0
retsub

// do_buy_with_auction
dobuywithauction_7:
proto 2 1
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
dup
bytec 4 // "allow_auction"
app_global_get
intc_1 // 1
==
assert
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
// payment must be to app address
assert
frame_dig -1
itob
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 1
frame_dig 1
intc_3 // 48
extract_uint64
frame_bury 2
frame_dig 1
extract 0 32
frame_bury 3
frame_dig 1
intc_2 // 32
extract_uint64
frame_bury 4
frame_dig 1
pushint 40 // 40
extract_uint64
frame_bury 5
frame_dig 2
intc_1 // 1
==
assert
txn Sender
frame_dig 3
==
assert
frame_dig -2
gtxns Amount
frame_dig 5
>=
// payment must be for >= (frame_dig: dig_from = 5)
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset_id"
app_global_get
itxn_field XferAsset
frame_dig 4
itxn_field AssetAmount
frame_dig 3
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_next
intc_1 // pay
itxn_field TypeEnum
bytec_1 // "seller"
app_global_get
itxn_field Receiver
frame_dig 5
itxn_field Amount
itxn_submit
pushint 2 // 2
frame_bury 2
frame_dig 3
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 2
itob
concat
frame_bury 1
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 1
box_put
pushint 2 // 2
frame_bury 0
retsub

// do_buy_without_auction
dobuywithoutauction_8:
proto 1 1
intc_0 // 0
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
// payment must be to app address
assert
frame_dig -1
gtxns Amount
bytec 8 // "origin_price"
app_global_get
>=
// payment must be for >= (app_global_get (utf8 bytes: "origin_price"))
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset_id"
app_global_get
itxn_field XferAsset
bytec 6 // "total_credits"
app_global_get
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
intc_1 // 1
frame_bury 0
retsub

// get_auction_record
getauctionrecord_9:
proto 1 1
bytec_0 // ""
frame_dig -1
itob
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
retsub

// withdraw
withdraw_10:
proto 1 0
txn Sender
bytec_1 // "seller"
app_global_get
==
// unauthorized
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
bytec_1 // "seller"
app_global_get
itxn_field Receiver
frame_dig -1
itxn_field Amount
itxn_submit
retsub

// create_caster
createcaster_11:
proto 0 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub create_0
retsub

// bootstrap_caster
bootstrapcaster_12:
proto 0 0
intc_0 // 0
dupn 4
bytec_0 // ""
dup
txna ApplicationArgs 1
btoi
frame_bury 2
txna ApplicationArgs 2
btoi
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
callsub bootstrap_1
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// set_allow_auction_caster
setallowauctioncaster_13:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub setallowauction_2
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// set_max_auction_number_caster
setmaxauctionnumbercaster_14:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub setmaxauctionnumber_3
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// create_auction_caster
createauctioncaster_15:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
frame_dig 1
frame_dig 2
callsub createauction_4
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// accept_auction_caster
acceptauctioncaster_16:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub acceptauction_5
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// remove_auction_caster
removeauctioncaster_17:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub removeauction_6
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// do_buy_with_auction_caster
dobuywithauctioncaster_18:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 2
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
callsub dobuywithauction_7
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// do_buy_without_auction_caster
dobuywithoutauctioncaster_19:
proto 0 0
intc_0 // 0
dup
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
callsub dobuywithoutauction_8
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// get_auction_record_caster
getauctionrecordcaster_20:
proto 0 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub getauctionrecord_9
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// withdraw_caster
withdrawcaster_21:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub withdraw_10
retsub